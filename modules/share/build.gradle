plugins {
    id 'java'
    id 'idea'
    id 'eclipse'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
}

group = 'ru.tehnobear'
version = '0.0.1'

bootJar {
    enabled = false
}

jar {
    enabled = true
}

dependencies {
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"

    // util
    implementation "jakarta.servlet:jakarta.servlet-api:${jakartaServletVersion}"
    // https://mvnrepository.com/artifact/io.projectreactor/reactor-core
    implementation "io.projectreactor:reactor-core:${projectreactorVersion}"
    annotationProcessor "javax.annotation:javax.annotation-api:${javaxVersion}"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api:${jakartaPersistenceApiVersion}"
    implementation "jakarta.persistence:jakarta.persistence-api:${jakartaPersistenceApiVersion}"
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation "org.apache.commons:commons-lang3:${commonsLang3Version}"
    // https://mvnrepository.com/artifact/net.sf.jasperreports/jasperreports
    implementation "net.sf.jasperreports:jasperreports:${jasperreportsVersion}"
    // https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk-s3
    implementation "com.amazonaws:aws-java-sdk-s3:${awsJavaSdkS3Version}"
    implementation "com.cronutils:cron-utils:${cronutilsVersion}"



    // QueryDSL
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"

    // openapi
    // https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-starter-webflux-ui
    implementation "org.springdoc:springdoc-openapi-starter-webflux-ui:${springdocVersion}"

    // modules
    implementation project(":modules:dao")

    // lombok
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testImplementation platform("org.junit:junit-bom:${junitBomVersion}")
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}