buildscript {
	ext {
		springVersion = "3.2.8"
		springDependencyVersion = "1.1.6"
		junitBomVersion = "5.10.0"
		lombokVersion = '1.18.34'
		HikariCPVersion = '5.1.0'
		postgresqlVersion = '42.7.3'
		ojdbc11Verion = '23.3.0.23.09'
		hibernateCoreVerion = '6.6.0.Final'
		queryDslVersion = '5.0.0'
		javaxVersion = '1.3.2'
		jakartaPersistenceApiVersion = '3.2.0'
		jakartaServletVersion = '6.1.0'
		springdocVersion = '2.6.0'
		ttddyyVersion = '1.10'
		jacksonVersion = '2.17.2'
		projectreactorVersion = '3.6.9'
		commonsLang3Version = '3.17.0'
		cronutilsVersion = '9.2.1'
		jasperreportsVersion = '6.21.3'
		itextVersion = '4.2.2'
		awsJavaSdkS3Version = '1.12.772'
		reflectionsVersion = '0.10.2'
		shedlockProviderJdbcTemplateVersion = '5.16.0'
		commonsCompressVersion = '1.27.1'
	}

	repositories {
		mavenCentral()
	}
}

plugins {
	id 'java'
	id 'idea'
	id 'eclipse'
	id 'application'
	id 'org.springframework.boot' version "${springVersion}"
	id 'io.spring.dependency-management' version "${springDependencyVersion}"
}

allprojects {
	repositories {
		mavenCentral()
	}
}

group = 'ru.tehnobear'
version = '0.0.1'

java {
	sourceCompatibility = "17"
}

application {
	mainClass = "ru.tehnobear.essence.EssenceReportApplication"
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-autoconfigure
	implementation 'org.springframework.boot:spring-boot-autoconfigure'
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-actuator
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// modules
	implementation project(":modules:receiver")
	implementation project(":modules:share")
	implementation project(":modules:report")
	implementation project(":modules:service")

	// util
	annotationProcessor "javax.annotation:javax.annotation-api:${javaxVersion}"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api:${jakartaPersistenceApiVersion}"
	implementation "jakarta.persistence:jakarta.persistence-api:${jakartaPersistenceApiVersion}"
	// https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
	implementation "org.apache.commons:commons-lang3:${commonsLang3Version}"

	// lombok
	compileOnly "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
	testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation platform("org.junit:junit-bom:${junitBomVersion}")
	testImplementation 'org.junit.jupiter:junit-jupiter'
}

tasks.named('test') {
	useJUnitPlatform()
}
